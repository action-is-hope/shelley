@namespace "Dialog";
@st-import ActionButton from "../ActionButton/actionButton.st.css";

.root {
  -st-states:
    size(enum(small, medium, large, fullscreen)),
    isDismissable;
  outline: none;
  display: flex;
}

.grid {
  display: grid;
  width: 100%;
  grid-template-areas:
    "hero hero hero hero hero hero"
    ". . . . . ."
    ".title header header typeIcon."
    ".divider divider divider divider."
    ".content content content content."
    ".footer footer buttonGroup buttonGroup."
    ". . . . . .";
}

.root:isDismissable::grid {
  grid-template-areas:
    "hero hero hero hero hero hero hero"
    ". . . . .closeButton closeButton"
    ".title header header typeIcon closeButton closeButton"
    ".divider divider divider divider divider."
    ".content content content content content."
    ".footer footer buttonGroup buttonGroup buttonGroup."
    ". . . . . . .";
}

.closeButton {}

/* Grid helpers to be placed on children. */
.hero {
  grid-area: hero;
}

.title {
  grid-area: title;
}

.header {
  grid-area: header-start / header-start / typeIcon-end / typeIcon-end;
  align-items: inherit;
  justify-content: flex-end;
  align-items: center;
  display: flex;
}

.typeIcon {
  grid-area: typeIcon;
}

.closeButton {
  -st-extends: ActionButton;
  grid-area: closeButton;
  place-self: center center;
}

.content {
  grid-area: content;
}

.divider {
  grid-area: divider;
}

hr.divider {
  height: 1px;
  border: none;
  width: 100%;
  background-color: grey;
}

.footer {
  grid-area: footer;
}

.buttonGroup {
  grid-area: buttonGroup;
}

@media screen and (min-width: 701px) {
  .root:size(small) {
    width: 400px;
  }

  .root:size(medium) {
    width: 500px;
  }

  .root:size(large) {
    width: 650px;
  }
}
