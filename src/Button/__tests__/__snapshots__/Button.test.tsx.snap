// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button includes #icon via prop positioned via #iconPos divider and children 1`] = `
<button
  className="ButtonBase__Test__root ButtonBase__Test---iconPos-5-start ButtonBase__Test---variant-7-primary ButtonBase__Test---tone-4-lead ButtonBase__Test---vol-1-3 Button__Test__root"
  data-id="button-data-id"
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  type="button"
>
  <span
    className="ButtonBase__Test__inner"
  >
    Button text
  </span>
  <span
    className="ButtonBase__Test__divider"
  />
   
  <svg
    aria-hidden={true}
    className="Icon__Test__root"
    focusable="false"
    viewBox="0 0 16 16"
  >
    <path
      d="M14 7h-5v-5h-2v5h-5v2h5v5h2v-5h5v-2z"
    />
  </svg>
</button>
`;

exports[`Button includes #icon, no children, visually hidden label text provided via Icon alt prop 1`] = `
<button
  aria-label="Button text"
  className="ButtonBase__Test__root ButtonBase__Test---variant-9-secondary ButtonBase__Test---tone-4-lead ButtonBase__Test---vol-1-3 Button__Test__root"
  data-id="button-data-id"
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  type="button"
>
   
  <svg
    aria-hidden={true}
    className="Icon__Test__root"
    focusable="false"
    viewBox="0 0 16 16"
  >
    <path
      d="M14 7h-5v-5h-2v5h-5v2h5v5h2v-5h5v-2z"
    />
  </svg>
</button>
`;

exports[`Button isLoading renders ProgressCircle 1`] = `
<button
  className="ButtonBase__Test__root ButtonBase__Test---variant-7-primary ButtonBase__Test---tone-4-lead ButtonBase__Test---vol-1-3 ButtonBase__Test--isLoading Button__Test__root"
  data-id="button-data-id"
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  type="button"
>
  <span
    className="ButtonBase__Test__inner"
  >
    Button text
  </span>
  <span
    className="ButtonBase__Test__divider"
  />
   
  <div
    aria-label="Loading"
    aria-valuemax={100}
    aria-valuemin={0}
    className="ProgressCircle__Test__root ProgressCircle__Test--isIndeterminate ProgressCircle__Test---size-5-small ProgressCircle__Test---variant-14-overBackground ButtonBase__Test__loader"
    data-id="button-data-id--progressCircle"
    id="react-aria-3"
    role="progressbar"
  >
    <div
      className="ProgressCircle__Test__track"
    />
    <div
      className="ProgressCircle__Test__fills"
    >
      <div
        className="ProgressCircle__Test__fillMask1"
      >
        <div
          className="ProgressCircle__Test__fillSubMask1"
          data-testid="fillSubMask1"
          style={{}}
        >
          <div
            className="ProgressCircle__Test__fill"
          />
        </div>
      </div>
      <div
        className="ProgressCircle__Test__fillMask2"
      >
        <div
          className="ProgressCircle__Test__fillSubMask2"
          data-testid="fillSubMask2"
          style={{}}
        >
          <div
            className="ProgressCircle__Test__fill"
          />
        </div>
      </div>
    </div>
  </div>
</button>
`;

exports[`Button isLoading renders ProgressCircle instead of icon 1`] = `
<button
  className="ButtonBase__Test__root ButtonBase__Test---iconPos-5-start ButtonBase__Test---variant-7-primary ButtonBase__Test---tone-4-lead ButtonBase__Test---vol-1-3 ButtonBase__Test--isLoading Button__Test__root"
  data-id="button-data-id"
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  type="button"
>
  <span
    className="ButtonBase__Test__inner"
  >
    Button text
  </span>
  <span
    className="ButtonBase__Test__divider"
  />
   
  <div
    aria-label="Loading"
    aria-valuemax={100}
    aria-valuemin={0}
    className="ProgressCircle__Test__root ProgressCircle__Test--isIndeterminate ProgressCircle__Test---size-5-small ProgressCircle__Test---variant-14-overBackground ButtonBase__Test__loader"
    data-id="button-data-id--progressCircle"
    id="react-aria-1"
    role="progressbar"
  >
    <div
      className="ProgressCircle__Test__track"
    />
    <div
      className="ProgressCircle__Test__fills"
    >
      <div
        className="ProgressCircle__Test__fillMask1"
      >
        <div
          className="ProgressCircle__Test__fillSubMask1"
          data-testid="fillSubMask1"
          style={{}}
        >
          <div
            className="ProgressCircle__Test__fill"
          />
        </div>
      </div>
      <div
        className="ProgressCircle__Test__fillMask2"
      >
        <div
          className="ProgressCircle__Test__fillSubMask2"
          data-testid="fillSubMask2"
          style={{}}
        >
          <div
            className="ProgressCircle__Test__fill"
          />
        </div>
      </div>
    </div>
  </div>
</button>
`;

exports[`Button renders as a basic anchor link via #href prop 1`] = `
<a
  className="ButtonBase__Test__root ButtonBase__Test---vol-1-3 button-class"
  data-id="button-data-id"
  href="http://shelley.earth"
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  role="button"
  tabIndex={0}
>
  <span
    className="ButtonBase__Test__inner"
  >
    Button text
  </span>
</a>
`;

exports[`Button renders as a basic button with custom #className 1`] = `
<button
  className="ButtonBase__Test__root ButtonBase__Test---variant-7-primary ButtonBase__Test---tone-4-lead ButtonBase__Test---vol-1-3 Button__Test__root button-class"
  data-id="button-data-id"
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  type="button"
>
  <span
    className="ButtonBase__Test__inner"
  >
    Button text
  </span>
</button>
`;

exports[`Button renders as third party (react-router) anchor provided via #elementType and #to props 1`] = `
<a
  className="ButtonBase__Test__root ButtonBase__Test---variant-7-primary ButtonBase__Test---tone-4-lead ButtonBase__Test---vol-1-3 Button__Test__root"
  data-id="button-data-id"
  href="/internal-link"
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  role="button"
  tabIndex={0}
>
  <span
    className="ButtonBase__Test__inner"
  >
    Button text
  </span>
</a>
`;

exports[`Button renders with stylable state prop classes, #tone, #variant, #vol and #fullwidth 1`] = `
<button
  className="ButtonBase__Test__root ButtonBase__Test---variant-7-primary ButtonBase__Test---tone-5-alert ButtonBase__Test---vol-1-6 ButtonBase__Test--fullWidth Button__Test__root"
  data-id="button-data-id"
  onBlur={[Function]}
  onClick={[Function]}
  onDragStart={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  type="button"
>
  <span
    className="ButtonBase__Test__inner"
  >
    Button text
  </span>
</button>
`;
