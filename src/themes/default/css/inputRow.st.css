/** inputRow.st.css */

:import {
  -st-from: "../../../components/InputRow/inputRow.st.css";
  -st-default: InputRow;
}

:import {
  -st-from: "../../../components/Label/label.st.css";
  -st-default: Label;
  -st-named: labelTextContainer, labelText;
}

:import {
  -st-from: "../../../components/TextInput/textInput.st.css";
  -st-default: TextInput;
}

:import {
  -st-from: "../theme.st.css";
  -st-default: Default;
  -st-named: --color-accent-1-default, --color-ui-default;
}

:import {
  -st-from: "../variables.st.css";
  -st-named: --font-plain, --base-font-size, --base-font-size-sm,
    --base-font-size-md, --base-font-size-lg, --ratio, --spacing-unit,
    --v1, --v2, --v3, --v4, --v5,
}

@st-scope Default {

  InputRow {
    /* Choosing to use grid for the moment but may switch to flex. */
    display: grid;
    /* 
      Showing the error before the field in question is the most logical but in 
      practice we want to render it below so as to avoid the field moving when
      it is in an eror state.

      The following provides some empty placeholder rows for our label and 
      potential input +1 whilst using a named grid line [error-message] to 
      reserve a place underneath for our error message.

      #bestOfBoth
      */
    grid-template-rows: auto auto auto [error-message];
  }

  InputRow.vol1 {
    font-size: value(--v1);
  }

  InputRow.vol2 {
    font-size: value(--v2);
  }

  InputRow.vol3 {
    /* font-size: calc(value(--v3)); */
    /* font-size: calc(16px + 2 * ((100vw - 320px) / 1480)); */
    font-size: calc(16px + 5 * ((100vw - 320px) / 1480));
  }

  @media screen and (min-width: 1800px) {
    InputRow.vol3 {
      /* font-size: 18px; */
      font-size: 21px;
    }
  }

  InputRow.vol4 {
    /* font-size: value(--v4); */
    font-size: calc(18px + 8.25 * ((100vw - 320px) / 1480));
  }

  @media screen and (min-width: 1800px) {
    InputRow.vol4 {
      font-size: 26.25px;
      /* 21 * 1.25 */
    }
  }

  InputRow.vol5 {
    font-size: value(--v5);
  }

  InputRow Label {
    /* grid-row: 1; */
    margin-bottom: 8px;
  }

  InputRow TextInput {
    /* grid-row: 2; */
  }

  /* InputRow.checkbox Label,
  InputRow.radio Label,
  InputRow.switch Label {
    flex-direction: row-reverse;
    align-items: center;
    justify-content: flex-end;
  } */

  InputRow Label::labelText {
    font-weight: 400;
    /* text-transform: uppercase; */

  }

  InputRow Label::labelTextContainer {
    display: block;
    /* font-size: 16px; */

    font-weight: 300;
    opacity: .7;
    letter-spacing: .02em;
  }


  InputRow TextInput::input {
    padding-top: 0.8em;
    padding-bottom: 0.8em;
    padding-left: 16px;
    padding-right: 16px
  }



  InputRow::errorMessage {
    /* Send the error message which is first in the source order to appear under the form input. */
    grid-row: error-message;
    font-size: 16px;
    font-weight: 300;
    opacity: .7;
    letter-spacing: .02em;
    color: #ff9292;
    border-left: 1px solid #fb999d;
    padding-left: 16px;
    padding: 8px 16px 0 16px;
  }

  InputRow.vol4 Label {
    /* background: pink; */
    /* font-size: 12px */
  }

  InputRow:focus-within {}

}
