/** inputRow.st.css */

:import {
  -st-from: "../../../components/InputRow/inputRow.st.css";
  -st-default: InputRow;
}

:import {
  -st-from: "../../../components/Label/label.st.css";
  -st-default: InputLabel;
}

:import {
  -st-from: "../../../components/HintText/hintText.st.css";
  -st-default: HintText;
}

:import {
  -st-from: "../../../components/TextInput/textInput.st.css";
  -st-default: TextInput;
}

:import {
  -st-from: "../mixins/multiply";
  -st-named: respScale;
}

:import {
  -st-from: "../theme.st.css";
  -st-default: Default;
  -st-named: --color-accent-1-default, --color-ui-default;
}

:import {
  -st-from: "../variables.st.css";
  -st-named:
    --spacing-unit,
    --text-vol-2-scale,
    --text-vol-2-max,
    --text-vol-3-scale,
    --text-vol-3-max,
    --text-vol-4-scale,
    --text-vol-4-max,
    --text-vol-5-scale,
    --text-vol-5-max,
    --text-vol-6-scale,
    --text-vol-6-max,
    --text-vol-7-scale,
    --text-vol-7-max,
    --text-vol-8-max,
    --text-vol-8-scale,
    --text-vol-8-max,

}

@st-scope Default {

  InputRow {
    /* Choosing to use grid for the moment but may switch to flex. */
    display: grid;
    /* 
      Showing the error before the field in question is the most logical but in 
      practice we want to render it below so as to avoid the field moving when
      it is in an eror state.

      The following provides some empty placeholder rows for our label and 
      potential input +1 whilst using a named grid line [error-message] to 
      reserve a place underneath for our error message.

      #bestOfBoth
      */
    grid-template-rows: auto auto auto [error-message];
  }


  /* Hmmm, class names which match css element selectors are confusing... */

  /* Volume 1 */
  InputRow.vol1 TextInput {
    font-size: 1em;
  }

  /* Volume 2 */
  InputRow.vol2 TextInput {
    font-size: respScale(1em, 1.25em);
  }

  @media screen and (min-width: 1800px) {
    InputRow.vol2 TextInput {
      font-size: 1.125em;
    }
  }

  /* Volume 3 */
  InputRow.vol3 TextInput {
    font-size: value(--text-vol-3-scale);
  }

  @media screen and (min-width: 1800px) {
    InputRow.vol3 TextInput {
      font-size: value(--text-vol-3-max);
    }
  }

  /* Volume 4 */
  InputRow.vol4 TextInput {
    font-size: value(--text-vol-4-scale);
  }

  @media screen and (min-width: 1800px) {
    InputRow.vol4 TextInput {
      font-size: value(--text-vol-4-max);
    }
  }

  /* Volume 5 */
  InputRow.vol5 TextInput {
    font-size: calc(value(--text-vol-5-scale) - .15rem);
  }

  @media screen and (min-width: 1800px) {
    InputRow.vol5 TextInput {
      font-size: calc(value(--text-vol-5-max) - .15rem);
    }
  }

  /* Volume 6 */
  InputRow.vol6 TextInput {
    font-size: calc(value(--text-vol-6-scale) - .15rem);
  }

  @media screen and (min-width: 1800px) {
    InputRow.vol6 TextInput {
      font-size: calc(value(--text-vol-6-max) - .15rem);
    }
  }






  /* Variant 1 - Body */
  InputRow.variant1 InputLabel {
    margin-bottom: 8px;
    /* letter-spacing: .02em; */
    line-height: 1.15;
    /* font-size: .944444em */
  }

  InputRow.variant1 HintText {
    opacity: .7;
  }

  InputRow.variant1 TextInput::inputField {
    padding: calc(0.2rem + .2em) 16px;
  }

  InputRow+InputRow {
    margin-top: calc(value(--spacing-unit) * 1)
  }



  InputRow::errorMessage {
    /* Send the error message which is first in the source order to appear under the form input. */
    grid-row: error-message;
    font-size: 16px;
    font-weight: 300;
    opacity: .7;
    letter-spacing: .02em;
    color: #ff9292;
    border-left: 1px solid #fb999d;
    padding-left: 16px;
    padding: 8px 16px 0 16px;
  }


}
