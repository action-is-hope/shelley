@namespace "ActionButton";

.root {
  -st-states:
    iconPos(enum(top, end, bottom, start)),
    isQuiet,
    fullWidth,
    vol(number),
    isPressed,
    isFocusVisible,
    isDisabled;
}

/* The 'inner' button. */
.inner {}

/* The divider which is rendered with an icon only. */
.divider {}


.root {
  /* = Local vars. */
  --bg-color: transparent;
  --border-color: grey;
  --text-color: inherit;
  --border-width: 1px;
  --border-radius: 4px;
  display: inline-flex;
  justify-content: space-between;
  /* = Explicitly set font-family else it will default to system style. */
  font-family: inherit;
  /* = Vertical content alignment - kicks in when heights are 'known'. */
  align-items: center;
  /* = Persist border to maintain alignment should you be using borders as 
    part of additonal visual states. */
  border-style: solid;
  border-width: var(--border-width);
  border-radius: var(--border-radius);
  border-color: var(--border-color);
  color: var(--text-color);
  background-color: var(--bg-color);
  /**
   * = Opininated: Some disagree with setting cursor: pointer (the hand) on 
   * interactive elements arguing system controls don't do this. Meh, for 
   * us it offers an additional cue to interaction which we feel asserts 
   * confidence. Many sites do this so perhaps it's expected by many users. 
   */
  cursor: pointer;
  /* = Horizontal alignment. */
  justify-content: center;
  /* = Safari spacing issue with button groups MacOs and IOS. */
  margin: 0;
}

/* top */
.root:iconPos(top) {
  flex-direction: column;
}

/* end / right */
.root:iconPos(end) {
  flex-direction: row-reverse;
}

/* bottom */
.root:iconPos(bottom) {
  flex-direction: column-reverse;
}

/* start / left */
.root:iconPos(start) {
  flex-direction: row;
}
