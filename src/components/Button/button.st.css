/* button.st.css */
@namespace "Button";

.root {
  -st-states:
    iconPos(enum(top, end, bottom, start)),
    tone(enum(1, 2, 3, 4, 5, 6)),
    variant(enum(1, 2, 3, 4, 5, 6)),
    vol(enum(1, 2, 3, 4, 5, 6));
  display: inline-flex;
  justify-content: space-between;
  /* = Explicitly set font-family else it will default to system style. */
  font-family: inherit;
  /* = Vertical content alignment - kicks in when heights are 'known'. */
  align-items: center;
  /* = Persist border to maintain alignment should you be using borders as 
    part of additonal visual states. */
  border-style: solid;
  border-width: 1px;
  border-radius: 4px;
  /**
   * = Opininated: Some disagree with setting cursor: pointer (the hand) on 
   * interactive elements arguing system controls don't do this. Meh, for 
   * us it offers an additional cue to interaction which we feel asserts 
   * confidence. Many sites do this so perhaps it's expected by many users. 
   */
  cursor: pointer;
  /* = Horizontal alignment. */
  justify-content: center;
}

/*==== Input Positions ====*/

/* top */
.root:iconPos(top) {
  flex-direction: column-reverse;
}

/* end / right */
.root:iconPos(end) {
  flex-direction: row-reverse;
}

/* bottom */
.root:iconPos(bottom) {
  flex-direction: column;
}

/* start / left */
.root:iconPos(start) {
  flex-direction: row;
}

/* The 'inner' button. */
.inner {}

/* The divider which is rendered with an icon only. */
.divider {}

/* The infotip element for inline tooltip style on focus/hover. */
.tip {}
