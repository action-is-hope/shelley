/* button.st.css */
@namespace "Button";

.root {
  -st-states:
    iconPos(enum(top, end, bottom, start)),
    fullWidth,
    tone(number),
    variant(string),
    vol(number),
    isPressed,
    isDisabled;
}

.root,
.root:visited {
  display: inline-flex;
  justify-content: space-between;
  /* = Explicitly set font-family else it will default to system style. */
  font-family: inherit;
  /* = Vertical content alignment - kicks in when heights are 'known'. */
  align-items: center;
  /* = Persist border to maintain alignment should you be using borders as 
    part of additonal visual states. */
  border-style: solid;
  border-width: 1px;
  border-radius: 4px;
  /**
   * = Opininated: Some disagree with setting cursor: pointer (the hand) on 
   * interactive elements arguing system controls don't do this. Meh, for 
   * us it offers an additional cue to interaction which we feel asserts 
   * confidence. Many sites do this so perhaps it's expected by many users. 
   */
  cursor: pointer;
  /* = Horizontal alignment. */
  justify-content: center;

  /* = Colour variables and associated properties. */
  --bg-color: transparent;
  --border-color: transparent;
  --text-color: inherit;

  /* = Set the like for like variable but -accent is special as we use 
    it to assign the colour index to the properties as we have used them
    in our variants. */
  color: var(--text-color);
  background-color: var(--bg-color);
  border-color: var(--border-color);
  /* = Safari spacing issue with button groups MacOs and IOS. */
  margin: 0;
  text-decoration: none;
}

/*==== Input Positions ====*/

/* top */
.root:iconPos(top) {
  flex-direction: column;
}

/* end / right */
.root:iconPos(end) {
  flex-direction: row-reverse;
}

/* bottom */
.root:iconPos(bottom) {
  flex-direction: column-reverse;
}

/* start / left */
.root:iconPos(start) {
  flex-direction: row;
}

/* The 'inner' button. */
.inner {}

/* The divider which is rendered with an icon only. */
.divider {}

/* The infotip element for inline tooltip style on focus/hover. */
.tip {}

.root:fullWidth {
  width: 100%;
}
