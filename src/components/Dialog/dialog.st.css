@st-import ActionButton from "../ActionButton/actionButton.st.css";

.root {
  -st-states:
    size(enum(small, medium, large, fullscreen)),
    isDismissable;
  /* @todo: Move to theme - not working and odd place for it. */
  --dialog-mobile-margin-x: 36px;
  --dialog-padding-x: 40px;
  --dialog-padding-y: 40px;
  --dialog-border-radius: 4px;
  --dialog-small-width: 400px;
  --dialog-medium-width: 480px;
  --dialog-large-width: 640px;
  --dialog-fullscreen-width: 100%;
}

.dialogGrid {}

.closeButton {
  -st-extends: ActionButton;
}

/* Styles */

.root {
  outline: none;
  display: flex;
  border-radius: var(--dialog-border-radius);
  width: calc(100vw - var(--dialog-mobile-margin-x));
}

.root:size(fullscreen) {
  height: calc(100vh - var(--dialog-mobile-margin-x));
}

@media screen and (min-width: 701px) {
  .root:size(small) {
    width: var(--dialog-small-width);
  }

  .root:size(medium) {
    width: var(--dialog-medium-width);
  }

  .root:size(large) {
    width: var(--dialog-large-width);
  }

}


/* Grid */
.dialogGrid {
  display: grid;
  grid-template-columns: var(--dialog-padding-x)auto 1fr auto minmax(0,auto)var(--dialog-padding-x);
  grid-template-rows: auto var(--dialog-padding-y) auto auto 1fr auto var(--dialog-padding-y);
  width: 100%;
  grid-template-areas:
    "hero hero hero hero hero hero"
    ". . . . . ."
    ".title header header typeIcon."
    ".divider divider divider divider."
    ".content content content content."
    ".footer footer buttonGroup buttonGroup."
    ". . . . . .";
}

@media screen and (max-width: 700px) {
  .dialogGrid {
    grid-template-rows: auto var(--dialog-padding-y)auto auto auto 1fr auto auto var(--dialog-padding-y);
    grid-template-areas:
      "hero hero hero hero hero hero"
    ". . . . . ."
    ".title header header typeIcon."
    ".divider divider divider divider."
    ".content content content content."
    ".footer footer footer footer."
    ".buttonGroup buttonGroup buttonGroup buttonGroup."
    ". . . . . .";
  }
}

.root:isDismissable .dialogGrid {
  grid-template-columns: var(--dialog-padding-x)auto 1fr auto minmax(0,auto)minmax(0,32px)var(--dialog-padding-x);
  grid-template-rows: auto var(--dialog-padding-y)auto auto 1fr auto var(--dialog-padding-y);
  grid-template-areas:
    "hero hero hero hero hero hero hero"
    ". . . . .closeButton closeButton"
    ".title header header typeIcon closeButton closeButton"
    ".divider divider divider divider divider."
    ".content content content content content."
    ".footer footer buttonGroup buttonGroup buttonGroup."
    ". . . . . . .";
}

@media screen and (max-width: 700px) {
  .root:isDismissable .dialogGrid {
    grid-template-columns: var(--dialog-padding-x)auto 1fr auto minmax(0,auto)minmax(0,40px)var(--dialog-padding-x);
    grid-template-rows: auto var(--dialog-padding-y)auto auto auto 1fr auto auto var(--dialog-padding-y);
    grid-template-areas:
      "hero hero hero hero hero hero hero"
        ". . . . .closeButton closeButton"
        ".title title title typeIcon closeButton closeButton"
        ".header header header header header."
        ".divider divider divider divider divider."
        ".content content content content content."
        ".footer footer footer footer footer."
        ".buttonGroup buttonGroup buttonGroup buttonGroup buttonGroup."
        ". . . . . . .";
  }
}

/* Grid Helpers */
.hero {
  grid-area: hero;
}

.title {
  grid-area: title;
}

.header {
  grid-area: header-start / header-start / typeIcon-end / typeIcon-end;
  align-items: inherit;
  justify-content: flex-end;
  align-items: center;
  display: flex;
}

.typeIcon {
  grid-area: typeIcon;
}

.closeButton {
  grid-area: closeButton;
  /* place-self: flex-start end; */
  place-self: center center;
}

.content {
  grid-area: content;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

.divider {
  grid-area: divider;
}

hr.divider {
  height: 1px;
  border: none;
  width: 100%;
  background-color: grey;
}

.footer {
  grid-area: footer;
}

.buttonGroup {
  grid-area: buttonGroup;
}

.hero {
  background-position: 50%;
  background-size: cover;
  grid-area: hero;
  overflow: hidden;
}

.hero img {
  height: 40vh;
  width: 100%;
  max-width: 100%;
  display: block;
  object-fit: cover;
}
