import type { ReactNode } from "react";
import {
  TableView,
  Cell,
  Column,
  Row,
  TableBody,
  TableHeader,
} from "../indexLib";
import type { PropRowDisplay } from "./helpers";

/**
 * Table for React props generated by react-docgen
 *
 * @see https://github.com/episodeyang/react-component-props-table/
 */
const PropsTable = (props: {
  className?: string;
  propMetaData: PropRowDisplay[];
}) => {
  const { propMetaData, ...rest } = props;
  let { className = "" } = props;
  if (className) className += " component-props-table";

  interface ColumnData {
    name: string;
    uid: keyof PropRowDisplay;
  }

  const columns: ColumnData[] = [
    { name: "Prop Name", uid: "name" },
    { name: "Type", uid: "type" },
    { name: "isRequired", uid: "required" },
    { name: "Default Value", uid: "defaultValue" },
    { name: "Description", uid: "description" },
  ];

  return (
    <TableView
      aria-label="Example table with static contents"
      // selectionMode="multiple"
      vol={1}
      isResponsive
      {...rest}
    >
      <TableHeader columns={columns}>
        {(column) => (
          <Column key={column.uid} data-id="table-column">
            {column.name}
          </Column>
        )}
      </TableHeader>
      <TableBody items={propMetaData}>
        {(item) => (
          <Row>
            {(columnKey) => {
              const value = item[columnKey as keyof PropRowDisplay];
              let renderValue: string | ReactNode =
                typeof value === "object" && value !== null
                  ? `${JSON.stringify(value)}`
                  : value ?? "null";
              if (columnKey === "name") {
                renderValue = (
                  <code style={{ color: "rgb(0 190 199)" }}>{value}</code>
                );
              }
              if (columnKey === "required") {
                renderValue =
                  value === "required" ? (
                    <span style={{ color: "rgb(255, 76, 34)" }}>{value}</span>
                  ) : (
                    <span style={{ color: "#c6c6c6" }}>{value}</span>
                  );
              }
              return <Cell data-id="table-cell">{renderValue}</Cell>;
            }}
          </Row>
        )}
      </TableBody>
    </TableView>
  );
};

export default PropsTable;
