/**
 * = Radio - radio.st.css
 *
 * Base theme styles for a Shelley Radio.
 *
 * CSS API: https://github.com/action-is-hope/shelley/blob/main/src/components/Radio/radio.st.css
 * 
 */

@st-import Default, [
    --spacing-unit,
    --color-error
  ] from "./project.st.css";
@st-import Radio from "../../components/Radio/radio.st.css";
@st-import RadioGroup from "../../components/RadioGroup/radioGroup.st.css";
@st-import Icon from "../../components/Icon/icon.st.css";
@st-import [
    SelectionControlInputContainer,
    SelectionControlFieldInput,
    RadioCheckboxCommon,
    RadioFieldInput,
    labelVol1,
    labelVol2,
    labelVol3,
    labelVol4,
    labelVol5,
    labelVol6,
    selectionControlSize1,
    selectionControlSize2,
    selectionControlSize3,
    selectionControlSize4,
    selectionControlSize5,
    selectionControlSize6
] from "./mixins/formElements.st.css";

@st-scope Default {

  Radio {
    gap: calc(var(--spacing-unit) / 2);
    cursor: pointer;
    line-height: 1.4;
  }

  Radio:isDisabled {
    cursor: not-allowed;
    opacity: 0.7;
  }

  Radio::inputContainer {
    -st-mixin: SelectionControlInputContainer;
  }

  Radio::input {
    -st-mixin: SelectionControlFieldInput;
  }

  Radio::input {
    -st-mixin: RadioCheckboxCommon;
  }

  Radio::input {
    -st-mixin: RadioFieldInput;
  }

  /* = States */
  Radio:validationState(invalid)::text {
    color: var(--color-error);
  }

  Radio:validationState(invalid)::input {
    border-color: var(--color-error);
  }

  Radio:validationState(invalid)::input::before {
    background-color: var(--color-error);
  }

  Radio:isFocusVisible::input::after {
    opacity: 1;
  }

  Radio Icon {
    font-size: 2em;
  }

  /* === Radio: sizes ===*/

  Radio:size(1)::inputContainer {
    -st-mixin: selectionControlSize1
  }

  Radio:size(2)::inputContainer {
    -st-mixin: selectionControlSize2
  }

  Radio:size(3)::inputContainer {
    -st-mixin: selectionControlSize3
  }

  Radio:size(4)::inputContainer {
    -st-mixin: selectionControlSize4
  }

  Radio:size(5)::inputContainer {
    -st-mixin: selectionControlSize5
  }

  Radio:size(6)::inputContainer {
    -st-mixin: selectionControlSize6
  }


  /* ==== RADIOGROUP ====*/

  RadioGroup {}

  RadioGroup::group {
    gap: 0.2em;
  }

  /* ==== RadioGroup: volume ====*/

  /* When in a RadioGroup the Radios use the same relative volume used for Field->label.*/
  RadioGroup:vol(1) Radio::text {
    -st-mixin: labelVol1
  }

  RadioGroup:vol(2) Radio::text {
    -st-mixin: labelVol2
  }

  RadioGroup:vol(3) Radio::text {
    -st-mixin: labelVol3
  }

  RadioGroup:vol(4) Radio::text {
    -st-mixin: labelVol4
  }

  RadioGroup:vol(5) Radio::text {
    -st-mixin: labelVol5
  }

  RadioGroup:vol(6) Radio::text {
    -st-mixin: labelVol6
  }
}
