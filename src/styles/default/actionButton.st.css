/* actionButton.st.css */

/* = Default project and vars */
@st-import Default, [--border-radius-button] from "./project.st.css";
/* Component API */
@st-import ActionButton from "../../components/ActionButton/actionButton.st.css";
/* = Child components */
@st-import Icon from "../../components/Icon/icon.st.css";
/* = Formatters */
@st-import [respScale] from "../formatters/common";
/* = Shelley Mixins */
@st-import [hideWebkitAppearance] from "./mixins/formElements.st.css";
@st-import [textVol] from "./mixins/text.st.css";
@st-import [pseudoFocus, pseudoFocusVisible] from "./mixins/focus.st.css";

/* This is how we can scope the styles in Stylable. */
@st-scope Default {

  /* = The base <button> element. */
  ActionButton {
    /* = Removes system styles. */
    -st-mixin: hideWebkitAppearance;
    /* = Caters postioned children, e.g focus pseudo element. Also 
    'activates' z-index should you need it. */
    position: relative;
    /* = Effects - 'all' --maybe-- IS too much... project var perhaps. */
    transition: opacity 0.3s ease, background-color 0.3s ease, color 0.3s ease;
    /* = Opininated: Some disagree with setting cursor: pointer (the hand) on 
    interactive elements arguing system controls don't do this. Meh, for 
    us it offers an additional cue to interaction which we feel asserts 
    confidence. Many sites do this so perhaps it's expected by many users. */
    cursor: pointer;
    /* = Really really opinionated, only do this if you are willing to provide 
    a suitable replacement. We are control freaks. */
    outline: none;
    /* = Weight choice will likely factor the font-smoothing used. */
    font-weight: 400;
    /* Using em values allowing the button to 'grow' insync with font-size. */
    padding: 0 .6em;
    height: 32px;
    border-radius: var(--border-radius-button);
  }

  ActionButton {
    -st-mixin:
      textVol(scale respScale(0.85em, .88em),
        max .875em, lineHeight 1.1);
  }

  ActionButton:isQuiet {
    border-color: transparent;
  }

  /* = Inner <span> */
  ActionButton::inner {
    padding-top: 0.1em;
  }

  /* = Divider - <span> rendered with Icon only, rename perhaps?*/
  ActionButton::divider {
    display: inline-block;
    width: .5em;
    line-height: 0;
  }

  /* = Targets an Icon component if present. */
  ActionButton Icon {
    /* = Not ideal as we get a little rounding issues on the svgs when they / 2 
    due to the respScale. */
    font-size: calc(1em + 2px);
  }

  ActionButton::after {
    -st-mixin: pseudoFocus;
    border-radius: var(--border-radius-button);
  }

  ActionButton:isFocusVisible::after {
    -st-mixin: pseudoFocusVisible;
  }

  /* = ActionButton CSS STATES PSEUDO */
  /* = Disabled */
  ActionButton:isDisabled,
  ActionButton:isDisabled:hover,
  ActionButton:isDisabled:focus,
  ActionButton:isDisabled:active,
  ActionButton:isDisabled:active:hover {
    opacity: 0.5
  }

}
