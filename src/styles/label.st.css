@st-namespace "shelleyLabel";
/**
 * = Label - label.st.css
 *
 * Base theme styles for a Shelley Label.
 *
 * Keep it basic, no padding, margin as this will effect the feild 
 * labelposition="over".
 *
 * CSS API: https://github.com/action-is-hope/shelley/blob/main/src/Label/label.st.css
 * 
 */
@st-import Shelley, [
  --label-font-weight,
  --field-selection-font-weight,
  --label-color
] from "./project.st.css";
@st-import Label from "../Label/label.st.css";
@st-import Icon from "../Icon/icon.st.css";

@st-scope Shelley {
  Label {
    /* = Flex enables our positional styles, grid could work too. */
    display: flex;
    justify-self: baseline;
    /* = Stops the text from getting selecting when clicking on labels. */
    user-select: none;
    pointer-events: auto;
    font-weight: var(--label-font-weight);
    color: var(--label-color);
    -webkit-font-smoothing: antialiased;
  }

  Label::text {
    font-weight: 400;
    -webkit-font-smoothing: antialiased;
  }

  Label:hasInput {
    display: inline-flex;
    /* = Reverse the direction as we provide the label first as per logical source order. */
    flex-direction: row-reverse;
    align-items: center;
    justify-content: flex-end;
    font-weight: var(--field-selection-font-weight);
  }

  /*==== Input Positions ====*/

  /* = top */
  Label:inputPosition(top):hasInput {
    flex-direction: column-reverse;
  }

  Label:inputPosition(top)::text {
    justify-content: center;
  }

  /* = end / right */
  Label:inputPosition(end):hasInput {
    flex-direction: row;
  }

  Label:inputPosition(end)::text {
    justify-content: flex-end;
  }

  /* = bottom */
  Label:inputPosition(bottom):hasInput {
    flex-direction: column;
  }

  Label:inputPosition(bottom)::text {
    justify-content: center;
  }

  Label Icon {
    font-size: 1.75em;
  }
}
