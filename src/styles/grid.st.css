@st-namespace "DefaultGrid";
/**
 * = Grid - grid.st.css
 *
 * Base theme styles for a Shelley Grid.
 *
 * CSS API: https://github.com/action-is-hope/shelley/blob/main/src/Grid/grid.st.css
 * 
 */
@st-import [
  --spacing-unit,
  --grid-gap,
  --grid-main-cols-xs, --grid-main-cols-sm, --grid-main-cols-md,
  breakpoint-sm,
  breakpoint-md,
  breakpoint-lg,
  breakpoint-xl,
  breakpoint-xxl,
] from "./project.st.css";

@st-import Grid from "../Grid/grid.st.css";
@st-import [formatted] from "./mixins/formatting.st.css";

@st-scope body {
  Grid {
    display: grid;
    grid-gap: var(--grid-gap);
  }

  /* = Assign formatting styles when formatted prop is set. */
  Grid:formatted {
    -st-mixin: formatted;
  }


  Grid:variant(main) {
    grid-row-gap: 0;
    grid-template-columns: var(--grid-main-cols-xs)
  }
}

/* = Width tweaks for sm and above. */
@media value(breakpoint-sm) {
  @st-scope body {
    Grid:variant(main) {
      grid-template-columns: var(--grid-main-cols-sm)
    }
  }
}

/* = Width tweaks for md and above. */
@media value(breakpoint-md) {
  @st-scope body {
    Grid:variant(main) {
      grid-template-columns: var(--grid-main-cols-md);
    }
  }
}

@st-scope body {

  /* = Set direct descendant Grid variant1 to 'edge' grid lines. */
  Grid:variant(main) > Grid:variant(main) {
    grid-column: edge;
  }

  Grid:variant(main) > h1,
  Grid:variant(main) > h2,
  Grid:variant(main) > h3,
  Grid:variant(main) > h4,
  Grid:variant(main) > h5,
  Grid:variant(main) > h6,
  Grid:variant(main) > p,
  Grid:variant(main) > ul,
  Grid:variant(main) > ol,
  Grid:variant(main) > dl,
  Grid:variant(main) > blockquote,
  Grid:variant(main) > pre,
  Grid:variant(main) > img,
  Grid:variant(main) > figure {
    grid-column: mid;
  }

  /* = If you need to jump these based on media query then do it with a custom class. */
  Grid:variant(main) > .mid {
    grid-column: mid;
  }

  Grid:variant(main) > .pen {
    grid-column: pen;
  }

  Grid:variant(main) > .goal {
    grid-column: goal;
  }

  Grid:variant(main) > .edge {
    grid-column: edge;
  }

  /* = Common snap patterns, you can set these up like a bootstrap grid if you like 
   * littering your HTML with conditional positional info. */

  Grid:variant(main) > .snapMidToGoal {
    grid-column: mid;
  }
}

@media value(breakpoint-md) {
  @st-scope body {
    Grid:variant(main) > .snapMidToGoal {
      grid-column: goal;
    }
  }
}


/* Define your grids */
