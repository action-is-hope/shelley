/**
 * = Default colour scheme - Light
 *
 * These are our alternate color schemes, only variable aware browers will see 
 * these so no need to set that as stylable build variables unless you want to.
 * Try to stay organised.
 */


:import {
  -st-from: "./project.st.css";
  -st-named:
    --dark-01,
    --dark-01-raw,
    --light-01,
    --light-01-raw,

    --color-accent-1-default,
    --color-accent-2-default,
    --color-accent-3-default,
    --color-accent-4-default,

    --color-background-1-default,
    --color-background-2-default,
    --color-background-3-default,
    --color-background-4-default,
    --color-background-modal-default,

    --color-text-1-default,
    --color-text-2-default,
    --color-text-3-default,
    --color-text-4-default,

    --color-status-error-default,
    --color-status-warn-default,
    --color-status-neutral-default,
    --color-status-success-default,

    --color-ui-default,
    --color-ui-raw-default,
    --color-ui-inverse-default,
    --color-ui-raw-inverse-default,


    --color-form-mark-default,
    --color-form-selection-track-default,
    --color-form-selection-mark-default,
    --color-focus-default,

    --grad-1-default,

    --select-icon-default
}

:import {
  -st-from: "../../components/Text/text.st.css";
  -st-default: Text;
}


/*=== SET CSS RUN-TIME VARIABLES ===*/

/**
 * Default color scheme variables
 * 
 * We make use of the Stylable build variables and map them to equivalent CSS 
 * runtime variables. This allows us to the -default version as our fallback,
 * it is a little confusing at first so keep checking your browser list.
 */

.root {
  --color-accent-1: value(--color-accent-1-default);
  --color-accent-2: value(--color-accent-2-default);
  --color-accent-3: value(--color-accent-3-default);
  --color-accent-4: value(--color-accent-4-default);
  --color-background-1: value(--color-background-1-default);
  --color-background-2: value(--color-background-2-default);
  --color-background-3: value(--color-background-3-default);
  --color-background-4: value(--color-background-4-default);
  --color-background-modal: value(--color-background-modal-default);
  --color-text-1: value(--color-text-1-default);
  --color-text-2: value(--color-text-2-default);
  --color-text-3: value(--color-text-3-default);
  --color-text-4: value(--color-text-4-default);
  --color-status-error: value(--color-status-error-default);
  --color-status-warn: value(--color-status-warn-default);
  --color-status-neutral: value(--color-status-neutral-default);
  --color-status-success: value(--color-status-success-default);
  --color-ui: value(--color-ui-default);
  --color-ui-raw: value(--color-ui-raw-default);
  --color-ui-inverse: value(--color-ui-inverse-default);
  --color-ui-raw-inverse: value(--color-ui-raw-inverse-default);

  --color-form-mark: value(--color-form-mark-default);
  --color-form-selection-track: value(--color-form-selection-track-default);
  --color-form-selection-mark: value(--color-form-selection-mark-default);
  --color-toggle-mark: value(--color-ui-default);

  --color-focus: value(--color-focus-default);

  --grad-1: value(--grad-1-default);

  --status-background: #692e2e;
  --support-background: #2e5b69;
  /* background: #51d6de;
    background: #50de98;
    background: #99ffcd;
    background: #92e6bd;
    background: #d1ffe9;
    background: #287750;
    background: #2f5442;
    background: #2e5b69; */

  /* --select-icon: value(--select-icon-default); */

  --select-icon: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='white' xml:space='preserve'><path d='M3 2v2l5 5 5-5v-2l-5 5z'></path><path d='M3 7v2l5 5 5-5v-2l-5 5z'></path></svg>")
}


/*= While all sounds well with "just change the colors to their counterparts it is never that simple, ever. "*/
/* Override our uppercase headings.
   Handy use of :global() if you want to style based on a tag, useful where a 
   component, link Text can output a number of tags as it's root element. */
.root :global(h2)Text.uppercase,
.root :global(h3)Text.uppercase,
.root :global(h4)Text.uppercase {
  color: value(--color-accent-2-default);
  color: var(--color-accent-2, value(--color-accent-2-default));
}
