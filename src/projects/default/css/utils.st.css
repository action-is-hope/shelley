/**
 * = Utilities / Common - utils.st.css
 *
 * Some helpful bits that can be used by themselves, depending on 
 * the specificity of properites already set that is... and you are able 
 * to use these as mixins within your component styles.
 * 
 * ========================================================================= */


:import {
  -st-from: "../project.st.css";
  -st-default: Default;
  -st-named:
    spacing-unit,
    breakpoint-sm,
    breakpoint-md,
    breakpoint-lg,
    breakpoint-xl,
    breakpoint-xxl,
    --color-focus-default,
}

:import {
  -st-from: "../../../components/Blockquote/blockquote.st.css";
  -st-default: Blockquote;
}

:import {
  -st-from: "../../../components_site/CodeSample/codeSample.st.css";
  -st-default: CodeSample;
}

:import {
  -st-from: "../../../components/Text/text.st.css";
  -st-default: Text;
}

/**
 * = Clearfix
 *
 * Just because we use CSS3 doesn't mean we throw all of our old tools away. ;-)
 * history: https://css-tricks.com/snippets/css/clear-fix/
 */

.clearfix::after {
  content: "";
  display: table;
  clear: both;
}

/**
 * = Pseudo focus shared styles.
 */
.peudoFocus {
  display: block;
  content: "";
  position: absolute;
  top: -3px;
  left: -3px;
  bottom: -3px;
  right: -3px;
  /*= Give us that 'glow' effect for the focused state.*/
  box-shadow: 0 0 1px 2px value(--color-focus-default);
  box-shadow: 0 0 1px 2px var(--color-focus, value(--color-focus-default));
  opacity: 0;
  /* transition: opacity 0.2s; */
  transition: opacity 120ms;
}

.peudoFocusVisible {
  opacity: 1
}

/**
 * = Candidate component CSS
 *
 * Some light styles that we are not sure what to do with.
 */

.exampleBox {
  padding: 64px;
  padding-top: 54px;
  border: 1px dashed rgba(255, 255, 255, 0.13);
  margin-top: 48px;
  margin-bottom: 48px;
}

.mbSmall {
  margin-bottom: 2rem
}


/**
 * = Formatting
 *
 * Formatting - might need it's own file eventually.
 */

.formatted>p+p,
.formatted>p+h4,
.formatted>p+h5,
.formatted>h2+p,
.formatted>h3+p,
.formatted>h4+p,
.formatted>h5+p,
.formatted>h6+p,
.formatted>h4+h5 {
  margin-top: calc(value(spacing-unit) * 2);
}

.formatted>blockquote,
.formatted>CodeSample {
  margin-top: calc(value(spacing-unit) * 4);
  margin-bottom: calc(value(spacing-unit) * 5);
  margin-bottom: 0;
}

.formatted>h2+CodeSample {
  margin-top: calc(value(spacing-unit) * 2);
}

.formatted>blockquote+Text,
.formatted>CodeSample+Text {
  margin-top: calc(value(spacing-unit) * 6);
}

.formatted>p+h2 {
  margin-top: calc(value(spacing-unit) * 4);
}

.formatted>p+Text.vol4 {
  margin-top: calc(value(spacing-unit) * 8);
}

.formatted>p+h3,
.formatted>h2+h3 {
  margin-top: calc(value(spacing-unit) * 4);
}

.formatted>p+h6 {
  margin-top: calc(value(spacing-unit) * 2);
}

/* Grid:typographic>CodeSample:last-child {
  margin-bottom: 0;
} */

/* Grid:typographic>blockquote+p {
  margin-top: calc(value(spacing-unit) * 3);
} */

/* Grid:typographic>p+blockquote {
  margin-top: calc(value(spacing-unit) * 4);
}

Grid:typographic>blockquote+p {
  margin-top: calc(value(spacing-unit) * 3);
} */
