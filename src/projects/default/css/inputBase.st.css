/** inputBase.st.css */

:import {
  -st-from: "../project.st.css";
  -st-default: Default;
  -st-named:
    spacing-unit,
    --color-ui-default;
}

:import {
  -st-from: './mixins/formElements.st.css';
  -st-named:
    textualFieldRoot,
    textualFieldContainer,
    textualFieldInput,
    inputVol1,
    inputVol2,
    inputVol3,
    inputVol4,
    inputVol5,
    inputVol6;
}

:import {
  -st-from: "../../../components/InputBase/inputBase.st.css";
  -st-default: InputBase;
  -st-named: fieldInput
}

:import {
  -st-from: "../../../components/Label/label.st.css";
  -st-default: InputLabel;
}

:import {
  -st-from: "../../../components/HintText/hintText.st.css";
  -st-default: HintText;
}

:import {
  -st-from: "../../../components/ErrorText/errorText.st.css";
  -st-default: ErrorText;
}

:import {
  -st-from: "../../../components/InputAdornment/inputAdornment.st.css";
  -st-default: Adornment;
}

@st-scope Default {

  /*==== BASE ====*/

  InputBase {
    -st-mixin: textualFieldRoot;
  }

  InputBase::fieldContainer {
    -st-mixin: textualFieldContainer;
  }

  /* Native input*/
  InputBase::fieldInput {
    -st-mixin: textualFieldInput;
  }

  /* Use a named import as a class to get the adjacent selectors working. */
  InputBase Adornment+.fieldInput,
  InputBase::fieldInput+Adornment {
    margin-left: calc(-.2rem - value(spacing-unit));
  }

  InputBase HintText {
    margin-top: calc(value(spacing-unit) / 2)
  }

  InputBase ErrorText {
    /* Send the error message which is first in the source order to appear under the form input. */
    order: 3;
    border-left-width: 1px;
    padding: 8px value(spacing-unit) 0 value(spacing-unit);
  }

  /* Textarea wrapper which can be used for scrolling. */
  InputBase::textAreaWrap {
    display: block;
    width: 100%;
  }


  /*==== STATES ====*/

  /* Error */
  InputBase:error::fieldContainer::before {
    background-color: #b66b6e;
  }

  /* Disabled */
  InputBase:disabled {
    filter: saturate(15%) brightness(70%);
  }

  InputBase:disabled::fieldInput {
    cursor: not-allowed;
  }


  /*==== VOLUMES ====*/

  /* Volume 1 */
  InputBase.vol1 {
    -st-mixin: inputVol1
  }

  /* Volume 2 */
  InputBase.vol2 {
    -st-mixin: inputVol2;
  }

  /* Volume 3 */
  InputBase.vol3 {
    -st-mixin: inputVol3
  }

  /* Volume 4 */
  InputBase.vol4 {
    -st-mixin: inputVol4
  }

  /* Volume 5 */
  InputBase.vol5 {
    -st-mixin: inputVol5
  }

  /* Volume 6 */
  InputBase.vol6 {
    -st-mixin: inputVol6
  }



  /*==== VARIANTS ====*/

  /* Variant 1 - "Body" */
  InputBase.variant1 InputLabel {
    margin-bottom: value(spacing-unit);
  }

  InputBase.variant1::fieldInput {
    /* padding: calc(0.2rem + .2em) 16px; */
  }

  InputBase.variant1+InputBase.variant1 {
    margin-top: calc(value(spacing-unit) * 1)
  }


  /* Variant 2 - "Data" */


  InputBase.variant2 {
    display: grid;
    grid-template-columns: 1fr 2fr;
    grid-column-gap: value(spacing-unit);
    background: rgba(255, 255, 255, 0.04);
  }

  InputBase.variant2 InputLabel {
    order: initial;
  }

  InputBase.variant2::fieldInput {
    padding-top: calc(0.2rem + .58em);
    padding-bottom: calc(0.2rem + .58em);
  }

  InputBase.variant2 ErrorText {
    grid-column: 2;
    padding-top: 4px;
    padding-bottom: 8px;
  }

  InputBase.variant2 InputLabel {
    margin-bottom: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;
  }

  InputBase.variant2 InputLabel::labelTextContainer {
    padding-top: 16px;
    padding-bottom: 16px;
  }

  InputBase.variant2 InputLabel::labelText {
    text-align: end;
  }

}
