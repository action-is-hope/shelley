/**
 * = INPUT SELECTION - inputSelection.st.css
 *
 * Selection control (radio, checkboxes, toggle) with label, positioning 
 * and variants
 *
 * ========================================================================= */



/** inputSelection.st.css */

/* = Project and vars. */
:import {
  -st-from: "../project.st.css";
  -st-default: Default;
  -st-named:
    spacing-unit,
    --color-background-3-default,
    --color-form-mark-default;
}

:import {
  -st-from: "../../../components/InputSelection/inputSelection.st.css";
  -st-default: InputSelection;
}

:import {
  -st-from: "../../../components/InputSelectionControl/inputSelectionControl.st.css";
  -st-default: SelectionControl;
}

:import {
  -st-from: "../../../components/Label/label.st.css";
  -st-default: InputLabel;
}

/* 
:import {
  -st-from: "../../../components/HintText/hintText.st.css";
  -st-default: HintText;
} */

:import {
  -st-from: "../../../components/ErrorText/errorText.st.css";
  -st-default: ErrorText;
}

:import {
  -st-from: "../../../components/Icon/icon.st.css";
  -st-default: Icon;
}

/* :import {
  -st-from: '../../../components/mixins/visuallyHidden.st.css';
  -st-named: visuallyHidden
} */

/* :import {
  -st-from: "../formatters/common";
  -st-named: respScale;
} */

:import {
  -st-from: './mixins/formElements.st.css';
  -st-named:
    hideWebkitAppearance,
    inputVol1,
    inputVol2,
    inputVol3,
    inputVol4,
    inputVol5,
    inputVol6;
}

@st-scope Default {
  InputSelection.radio {}

  InputSelection {
    display: inline-flex;
    flex-direction: column-reverse;
  }

  InputSelection InputLabel {
    cursor: pointer
  }

  InputSelection:disabled InputLabel {
    cursor: not-allowed;
  }

  InputSelection ErrorText {
    padding-top: value(spacing-unit);
    padding-bottom: value(spacing-unit);
  }

  /* ==== VOLUMES ====*/

  /* = Volume 1 */
  InputSelection.vol1 {
    -st-mixin: inputVol1
  }

  /* = Volume 2 */
  InputSelection.vol2 {
    -st-mixin: inputVol2;
  }

  /* = Volume 3 */
  InputSelection.vol3 {
    -st-mixin: inputVol3
  }

  /* = Volume 4 */
  InputSelection.vol4 {
    -st-mixin: inputVol4
  }

  /* = Volume 5 */
  InputSelection.vol5 {
    -st-mixin: inputVol5
  }

  /* = Volume 6 */
  InputSelection.vol6 {
    -st-mixin: inputVol6
  }


  /* ==== VARIANTS ====*/

  /* = Variant 1 - Basic alignment. */

  InputSelection Icon {
    font-size: 2em;
  }

  InputSelection.variant1 InputLabel:inputPos(top)::textContainer {
    padding-top: calc(value(spacing-unit) / 2 + 0.2em);
  }

  InputSelection.variant1 InputLabel:inputPos(end)::textContainer {
    /* rtl padding-left: value(spacing-unit); */
    padding-right: value(spacing-unit);
  }

  InputSelection.variant1 InputLabel:inputPos(bottom)::textContainer {
    padding-bottom: calc(value(spacing-unit) / 2 + 0.2em);
  }

  InputSelection.variant1 InputLabel:inputPos(start)::textContainer {
    padding-left: value(spacing-unit);
    /* = rtl padding-right: value(spacing-unit); */
  }



  /* = Variant 2 - Form row style. */
  InputSelection.variant2 {
    display: flex;
  }

  InputSelection.variant2 InputLabel.hasInput {
    display: grid;
    grid-template-columns: 1fr 2fr;
    grid-column-gap: value(spacing-unit);
  }

  InputSelection.variant2 {
    background-color: value(--color-background-3-default);
    background-color: var(--color-background-3, value(--color-background-3-default));
  }

  InputSelection.variant2 InputLabel::labelText {
    justify-content: flex-end;
  }

  InputSelection.variant2 SelectionControl {
    border-left: 1px solid value(--color-form-mark-default);
    border-left: 1px solid var(--color-form-mark, value(--color-form-mark-default));
    padding: value(spacing-unit);
  }

  InputSelection.variant2 ErrorText {
    border-left-width: 1px;
    padding: 4px value(spacing-unit) 8px;
    /* 12px is from 18px / 3 * 2 */
    margin-left: calc(100% / 3 + 12px);
  }
