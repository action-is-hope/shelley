/** inputSelection.st.css */

/* project and vars */
:import {
  -st-from: "../project.st.css";
  -st-default: Default;
  -st-named: spacing-unit;
}

:import {
  -st-from: "../../../components/InputSelection/inputSelection.st.css";
  -st-default: InputSelection;
}

:import {
  -st-from: "../../../components/InputSelectionControl/inputSelectionControl.st.css";
  -st-default: SelectionControl;
}

:import {
  -st-from: "../../../components/Label/label.st.css";
  -st-default: InputLabel;
}

:import {
  -st-from: "../../../components/HintText/hintText.st.css";
  -st-default: HintText;
}

:import {
  -st-from: "../../../components/ErrorText/errorText.st.css";
  -st-default: ErrorText;
}

:import {
  -st-from: "../../../components/Icon/icon.st.css";
  -st-default: Icon;
}

:import {
  -st-from: '../../../components/mixins/visuallyHidden.st.css';
  -st-named: visuallyHidden
}

:import {
  -st-from: "../formatters/common";
  -st-named: respScale;
}

:import {
  -st-from: './mixins/formElements.st.css';
  -st-named:
    hideWebkitAppearance,
    inputVol1,
    inputVol2,
    inputVol3,
    inputVol4,
    inputVol5,
    inputVol6;
}

@st-scope Default {
  InputSelection.radio {}

  InputSelection {
    /* display: grid;
  grid-template-rows: auto auto auto [error-message]; */
    display: inline-flex;
    flex-direction: column-reverse;
  }

  InputSelection InputLabel {
    cursor: pointer
  }

  InputSelection:disabled InputLabel {
    cursor: not-allowed;
  }

  /*==== VOLUMES ====*/

  /* Volume 1 */
  InputSelection.vol1 {
    -st-mixin: inputVol1
  }

  /* Volume 2 */
  InputSelection.vol2 {
    -st-mixin: inputVol2;
  }

  /* Volume 3 */
  InputSelection.vol3 {
    -st-mixin: inputVol3
  }

  /* Volume 4 */
  InputSelection.vol4 {
    -st-mixin: inputVol4
  }

  /* Volume 5 */
  InputSelection.vol5 {
    -st-mixin: inputVol5
  }

  /* Volume 6 */
  InputSelection.vol6 {
    -st-mixin: inputVol6
  }

  InputSelection ErrorText {
    /* Send the error message which is first in the source order to appear under the form input. */
    /* grid-row: error-message; */
  }

  /*==== VARIANTS ====*/

  /* Variant 1 - Basic alignment. */

  InputSelection Icon {
    font-size: 2em;
  }

  InputSelection.variant1 InputLabel:inputPos(top)::textContainer {
    padding-top: calc(value(spacing-unit) / 2 + 0.2em);
  }

  InputSelection.variant1 InputLabel:inputPos(end)::textContainer {
    /* rtl padding-left: value(spacing-unit); */
    padding-right: value(spacing-unit);
  }

  InputSelection.variant1 InputLabel:inputPos(bottom)::textContainer {
    padding-bottom: calc(value(spacing-unit) / 2 + 0.2em);
  }

  InputSelection.variant1 InputLabel:inputPos(start)::textContainer {
    padding-left: value(spacing-unit);
    /* rtl padding-right: value(spacing-unit); */
  }



  /*= Variant 2 - Form row style. */
  InputSelection.variant2 {
    display: flex;
  }

  InputSelection.variant2 InputLabel.hasInput {
    display: grid;
    grid-template-columns: 1fr 2fr;
    grid-column-gap: 18px;
  }

  InputSelection.variant2 {
    background: rgba(255, 255, 255, 0.04);
  }

  InputSelection.variant2 InputLabel::labelText {
    justify-content: flex-end;
  }

  InputSelection.variant2 SelectionControl {
    border-left: 1px solid rgb(119, 140, 157);
    padding: value(spacing-unit);
  }

  InputSelection.variant2 ErrorText {
    border-left-width: 1px;
    padding: 4px value(spacing-unit) 8px;
    /* 12px is from 18px / 3 * 2 */
    margin-left: calc(100% / 3 + 12px);
  }

  /*= Variant 3 - Icon as Label variant */
  InputSelection.variant3 {
    /* position: fixed; */
    /* top: 0; */
    /* right: calc(value(spacing-unit) * 2) */
  }



  InputSelection.variant3 SelectionControl {
    -st-mixin: visuallyHidden
  }

  InputSelection.variant3 InputLabel::labelText:after {
    content: "";
    width: 18px;
    height: 18px;
    top: 8px;
    left: 2px;
    /* background-color: var(--color-ui); */
    background-color: var(--color-ui);
    border-radius: 30px;
    position: absolute;
    border: 1px solid transparent;
    transition: left 190ms;
  }

  InputSelection.variant3 Icon {
    font-size: 32px;
    border-radius: 30px;
    border: 1px solid transparent;
    transition: transform 190ms;
  }

  InputSelection.variant3:focus-within Icon {
    /* transform: rotate(180deg); */

  }

  InputSelection.variant3 InputLabel::textContainer {
    display: flex;
    flex-direction: column;
    /* align-items: center; */
    align-items: flex-end;
    position: relative;
    color: inherit;
  }

  InputSelection.variant3:hover Icon {
    /* transform: rotate(180deg); */
    /* box-shadow: 0 0 2px 2px #00a4ff; */
  }

  InputSelection.variant3.on Icon {
    transform: rotate(180deg);
  }

  InputSelection.variant3.on InputLabel::labelText:after {
    left: 13px;
  }

  InputSelection.variant3:hover InputLabel::labelText:after,
  InputSelection.variant3:focus-within InputLabel::labelText:after {
    /* box-shadow: 0 0 2px 1px #00a4ff; */
    /* border-color: var(--color-ui); */
  }



  InputSelection.variant3 HintText {
    transform: scale(0);
    transition: transform 120ms;
    transition-delay: .2s;
    position: absolute;
    right: calc(0px - value(spacing-unit) * 2);
    font-size: 12px;
    background: #0000009e;
    color: #fff;

    /* background: rgba(var(--color-ui-raw-inverse), 0.7); */
    /* justify-content: end; */
    padding: 5px 8px;
    border-radius: 4px;
    -webkit-font-smoothing: auto;
    /* display: flex; */
    white-space: nowrap;
    bottom: -38px;
  }





  /* Fabulous! https://css-tricks.com/touch-devices-not-judged-size/ */
  @media (pointer: coarse) {
    InputSelection.variant3 HintText {
      -st-mixin: visuallyHidden
    }
  }

  InputSelection.variant3:hover HintText,
  InputSelection.variant3:focus-within HintText {
    transform: scale(1);
  }

  /* InputSelection.variant3:focus-within:hover HintText {
    transform: scale(0);
  } */
