[
  {
    "tags": {},
    "filePath": "src/Menu/Menu.tsx",
    "description": "",
    "displayName": "_Menu",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "ClassName if you need/want a style hook.",
        "name": "className",
        "parent": {
          "fileName": "src/Menu/Menu.tsx",
          "name": "MenuProps"
        },
        "declarations": [
          {
            "fileName": "src/Menu/Menu.tsx",
            "name": "MenuProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "autoFocus": {
        "defaultValue": null,
        "description": "Where the focus should be set.",
        "name": "autoFocus",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/menu/src/index.d.ts",
          "name": "MenuProps"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/menu/src/index.d.ts",
            "name": "MenuProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | FocusStrategy | undefined"
        }
      },
      "shouldFocusWrap": {
        "defaultValue": null,
        "description": "Whether keyboard navigation is circular.",
        "name": "shouldFocusWrap",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/menu/src/index.d.ts",
          "name": "MenuProps"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/menu/src/index.d.ts",
            "name": "MenuProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onAction": {
        "defaultValue": null,
        "description": "Handler that is called when an item is selected.",
        "name": "onAction",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/menu/src/index.d.ts",
          "name": "MenuProps"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/menu/src/index.d.ts",
            "name": "MenuProps"
          }
        ],
        "required": false,
        "type": {
          "name": "((key: Key) => void) | undefined"
        }
      },
      "onClose": {
        "defaultValue": null,
        "description": "Handler that is called when the menu should close after selecting an item.",
        "name": "onClose",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/menu/src/index.d.ts",
          "name": "MenuProps"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/menu/src/index.d.ts",
            "name": "MenuProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The contents of the collection.",
        "name": "children",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/collections.d.ts",
          "name": "CollectionBase"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/collections.d.ts",
            "name": "CollectionBase"
          }
        ],
        "required": true,
        "type": {
          "name": "CollectionChildren<object>"
        }
      },
      "items": {
        "defaultValue": null,
        "description": "Item objects in the collection.",
        "name": "items",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/collections.d.ts",
          "name": "CollectionBase"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/collections.d.ts",
            "name": "CollectionBase"
          }
        ],
        "required": false,
        "type": {
          "name": "Iterable<object> | undefined"
        }
      },
      "disabledKeys": {
        "defaultValue": null,
        "description": "The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",
        "name": "disabledKeys",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/collections.d.ts",
          "name": "CollectionBase"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/collections.d.ts",
            "name": "CollectionBase"
          }
        ],
        "required": false,
        "type": {
          "name": "Iterable<Key> | undefined"
        }
      },
      "selectionMode": {
        "defaultValue": null,
        "description": "The type of selection that is allowed in the collection.",
        "name": "selectionMode",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/selection.d.ts",
          "name": "MultipleSelection"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/selection.d.ts",
            "name": "MultipleSelection"
          }
        ],
        "required": false,
        "type": {
          "name": "SelectionMode | undefined"
        }
      },
      "disallowEmptySelection": {
        "defaultValue": null,
        "description": "Whether the collection allows empty selection.",
        "name": "disallowEmptySelection",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/selection.d.ts",
          "name": "MultipleSelection"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/selection.d.ts",
            "name": "MultipleSelection"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "selectedKeys": {
        "defaultValue": null,
        "description": "The currently selected keys in the collection (controlled).",
        "name": "selectedKeys",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/selection.d.ts",
          "name": "MultipleSelection"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/selection.d.ts",
            "name": "MultipleSelection"
          }
        ],
        "required": false,
        "type": {
          "name": "Iterable<Key> | \"all\" | undefined"
        }
      },
      "defaultSelectedKeys": {
        "defaultValue": null,
        "description": "The initial selected keys in the collection (uncontrolled).",
        "name": "defaultSelectedKeys",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/selection.d.ts",
          "name": "MultipleSelection"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/selection.d.ts",
            "name": "MultipleSelection"
          }
        ],
        "required": false,
        "type": {
          "name": "Iterable<Key> | \"all\" | undefined"
        }
      },
      "onSelectionChange": {
        "defaultValue": null,
        "description": "Handler that is called when the selection changes.",
        "name": "onSelectionChange",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/selection.d.ts",
          "name": "MultipleSelection"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/selection.d.ts",
            "name": "MultipleSelection"
          }
        ],
        "required": false,
        "type": {
          "name": "((keys: Selection) => any) | undefined"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "shelley/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "data-id": {
        "defaultValue": null,
        "description": "Add predefined data-id to ease testing or analytics.",
        "name": "data-id",
        "parent": {
          "fileName": "shelley/src/typings/shared-types.ts",
          "name": "ComponentBase"
        },
        "declarations": [
          {
            "fileName": "shelley/src/typings/shared-types.ts",
            "name": "ComponentBase"
          }
        ],
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "ref": {
        "defaultValue": null,
        "description": "",
        "name": "ref",
        "parent": {
          "fileName": "shelley/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Ref<HTMLUListElement> | undefined"
        }
      },
      "key": {
        "defaultValue": null,
        "description": "",
        "name": "key",
        "parent": {
          "fileName": "shelley/node_modules/@types/react/index.d.ts",
          "name": "Attributes"
        },
        "declarations": [
          {
            "fileName": "shelley/node_modules/@types/react/index.d.ts",
            "name": "Attributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Key | null | undefined"
        }
      }
    }
  }
]